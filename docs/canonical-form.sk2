<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- sK1 2 1
000035dc -->
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="300" height="300">
<image y="0.0"  x="0.0" xlink:href="data:image/png;base64,

"  height="300" width="300" />
<!-- Encapsulated SK2
obj('Document')
set('styles',{'Default Style': [[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []], 'Default Text Style': [[1, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Regular', 12.0, 0, [], True]]})
set('doc_units','mm')
set('metainfo',['', '', '', ''])
set('doc_origin',1)
set('resources',{})
obj('Pages')
set('page_counter',1)
set('page_format',['A4', (595.275590551181, 841.8897637795275), 0])
obj('Page')
set('name','Page 1')
set('page_format',['Custom', (2902.6771653543306, 2902.6771653543306), 1])
set('layer_counter',1)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Rectangle')
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',2609.56116405)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('fill_trafo',[])
set('height',2656.86438757)
set('start',[-1365.8805790702943, -1298.8676790870477])
set('trafo',[1.1123230800923631, 0.0, 0.0, 1.092521728852709, 67.96250569244022, -32.29980744070987])
end()
obj('Group')
obj('Ellipse')
set('style',[[1, 0, ['RGB', [0.5333333333333333, 0.8117647058823529, 0.984313725490196], 1.0, '']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[1695.03217604683, 0.0, 0.0, 1750.2192701506801, -873.138667428774, -971.6870497570781])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[28346.45448763046, 0.0, 0.0, 28346.461457507223, -14173.226557892925, -28727.062494184796])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [0.5686274509803921, 0.5019607843137255, 0.4392156862745098], 1.0, '']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[1695.03217604683, 0.0, 0.0, 1750.2192701506801, -873.138667428774, -971.6870497570781])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[27907.67487993661, 0.0, 0.0, 27907.68174192547, -13953.836727758287, -28507.67253118732])
end()
end()
obj('Curve')
set('paths',[[[-13.79677352596257, 1.9709676465660813], [[999.2805968090032, 431.64191459797183]], 0]])
set('style',[[], [0, 28.346456692913385, ['RGB', [0.0, 0.0, 1.0], 1.0, 'Blue'], [], 1, 0, 10.433, 0, 0, [[], 0]], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, -467.74707538426856])
end()
obj('Curve')
set('paths',[[[-1.9709676465660813, 1.9709676465660813], [[1046.5838203265891, 1074.1773673785144]], 0]])
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [0, 28.346456692913385, ['CMYK', [0.0, 0.0, 1.0, 0.0], 1.0, 'Yellow'], [], 2, 0, 10.433, 0, 0, [[], 0]], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[0.7386680934800466, 0.0, 0.0, 1.0595746196764861, 21.221592991089956, -452.9021337658869])
end()
obj('Curve')
set('paths',[[[-17.738708819094732, -707.5773851172232], [[-29.56451469849122, 1137.248332068629]], 0]])
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [0, 28.346456692913385, ['RGB', [1.0, 0.0, 1.0], 1.0, 'Magenta'], [], 2, 0, 10.433, 0, 0, [[], 0]], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[2.396530024235742, 0.0, 0.0, 0.8438899420735834, 56.683551940419605, -243.30944638496032])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[295.64514698491223, 0.0, 0.0, 307.47095286430863, 955.9193085845494, 644.5064204271087])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[283.4651572969973, 0.0, 0.0, 283.462996547256, 787.6774677538954, 737.7762834832317])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 0.0, 1.0], 1.0, 'Magenta']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','Wj1aZW5pdGg=')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -297.6161146314783, 1267.3321967419904])
set('fill_trafo',[])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -250.10549377407628, 882.7806957767918])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 0.0, 0.0], 1.0, 'Red']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','UDA=')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2043.8934494890264, 620.8548086683156])
set('fill_trafo',[])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -210.89353818257064, -572.9967477108972])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 1.0, 0.0], 1.0, 'Yellow']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','U3VuPS1MaWdodA==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2619.7297660315526, 644.1958441061195])
set('width',-1)
set('fill_trafo',[])
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 736.3127608533538, 435.57964995315615])
end()
obj('Curve')
set('paths',[[[5.601702992227126, -696.478405366906], [[1279.0555165585272, -703.9473426898755]], 0]])
set('style',[[], [0, 28.346456692913385, ['RGB', [1.0, 0.0, 1.0], 1.0, 'Magenta'], [], 1, 0, 10.433, 0, 0, [[], 0]], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[0.8093842673679296, 0.0, 0.0, -1.1192347998149699, 8.525660885944886, -1396.492391953831])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 0.0, 1.0], 1.0, 'Magenta']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','WD1Gb3J3YXJk')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, 1693.5815379833343, -591.913282845333])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 629.2153408013776, -812.8223325128824])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [0.0, 0.0, 1.0], 1.0, 'Blue']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','Vg==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2371.074078818996, 423.7580440117075])
set('width',-1)
set('fill_trafo',[])
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 1105.7128497235717, -20.337419613768077])
end()
obj('Curve')
set('paths',[[[-1074.1773673785144, 1.9709676465660813], [[1089.945108551043, 17.738708819094732]], 0]])
set('style',[[], [0, 28.346456692913385, ['RGB', [1.0, 0.0, 0.0], 1.0, 'Red'], [], 2, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[0.6549184510695402, 0.0, 0.0, 0.6549184510695402, 30.31450422038982, -464.3464224432196])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [1.0, 0.0, 0.0], 1.0, 'Red']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[114.31612350083272, 0.0, 0.0, 185.27095877721166, -84.7516088023415, 305.4999852177426])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[113.3915751145073, 0.0, 0.0, 113.3840883817281, -56.69753937555107, -524.4396514938384])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 0.0, 0.0], 1.0, 'Red']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','SG9yaXpvbnRhbApQbGFuZQ==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2851.9901845811196, 128.11289702679528])
set('fill_trafo',[])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -715.3035782917622, -215.47898436498258])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 0.0, 0.0], 1.0, 'Red']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','aA==')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2288.2934376632206, -88.69354409547365])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 117.51697495885625, -571.6091864877147])
end()
obj('Curve')
set('paths',[[[329.1515969765356, 652.3902910133729], [[[302.8720283556545, 676.0419027721659], [276.5924597347734, 699.6935145309589], [250.31289111389233, 723.3451262897519], 0], [[208.2655813204826, 741.7408243243686], [166.21827152707286, 760.1365223589854], [124.17096173366312, 778.5322203936022], 0], [[80.80967350920933, 781.1601772556903], [37.448385284755545, 783.7881341177783], [-5.912902939698244, 786.4160909798665], 0]], 0]])
set('style',[[], [0, 28.346456692913385, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow'], [], 1, 0, 10.433, 0, 0, [0, 0]], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[1.011765281495522, 0.0, 0.0, 1.0882285954418751, 59.198638154860376, -474.0600958277345])
end()
obj('Curve')
set('paths',[[[329.1515969765356, 652.3902910133729], [[[302.8720283556545, 676.0419027721659], [276.5924597347734, 699.6935145309589], [250.31289111389233, 723.3451262897519], 0], [[208.2655813204826, 741.7408243243686], [166.21827152707286, 760.1365223589854], [124.17096173366312, 778.5322203936022], 0], [[80.80967350920933, 781.1601772556903], [37.448385284755545, 783.7881341177783], [-5.912902939698244, 786.4160909798665], 0]], 0]])
set('style',[[], [0, 28.346456692913385, ['RGB', [0.0, 0.0, 1.0], 1.0, 'Blue'], [], 1, 0, 10.433, 0, 0, [0, 0]], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[1.3882327314281315, 0.0, 0.0, 1.4705969068174864, 69.30887600653625, -1133.479094668025])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [0.0, 0.0, 1.0], 1.0, 'Blue']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','cGhp')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2576.0547140618683, 609.0290027889191])
set('fill_trafo',[])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 451.35159106363267, -20.337419613768077])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','ZGVsdGE=')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2714.022449321494, 368.5709499078572])
set('fill_trafo',[])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 135.9967676130595, 499.99803907967737])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'White']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','Q2Fub25pY2FsIEZvcm0Kb2YgKGgscGhpLGRlbHRhKQp3aGVyZSBvbWVnYT0w')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2398.667625870921, 825.8354439111881])
set('fill_trafo',[])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -1296.439446946478, 656.2878895817814])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','RWFydGg=')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2911.1192139781024, -135.9967676130596])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -1230.3726114335834, -847.9546182774516])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','QXRtb3NwaGVyZQ==')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2911.1192139781024, -135.9967676130596])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -1387.7977393001095, -569.4332382059056])
end()
obj('TextBlock')
set('style',[[0, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'White']], [], ['Sans', 'Bold', 72.0, 0, [], True]])
set('stroke_trafo',[])
set('text','U3BhY2U=')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -2911.1192139781024, -135.9967676130596])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -1278.8111123155913, -270.72914943352293])
end()
end()
end()
end()
obj('DesktopLayers')
end()
obj('MasterLayers')
end()
obj('GridLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.0, 1.0], 0.15, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GridLayer')
set('color',[0.0, 0.0, 1.0, 0.15])
set('grid',[0.0, 0.0, 2.8346456692913384, 2.8346456692913384])
set('properties',[0, 0, 0, 1])
end()
obj('GuideLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.3176470588235294, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GuideLayer')
set('color',[0.0, 0.3176470588235294, 1.0, 1.0])
set('properties',[1, 1, 0, 0])
end()
end()
-->
</svg>
