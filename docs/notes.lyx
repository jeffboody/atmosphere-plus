#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass paper
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Atmosphere Plus
\end_layout

\begin_layout Author
Jeff Boody | jeffboody@3dgesoftware.com
\end_layout

\begin_layout Section*
About
\end_layout

\begin_layout Standard
These notes describe the atmospheric rendering theory and implementation
 for the Atmosphere Plus demo.
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Subsection
Wavelength of Light
\end_layout

\begin_layout Standard
The wavelength of light is a continuous value, however, we will select 3
 discrete wavelengths to represent red, green and blue light.
\end_layout

\begin_layout Standard
The typical range of wavelengths include:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{r}=\left(620,750\right)$
\end_inset

 nm
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{g}=\left(495,570\right)$
\end_inset

 nm
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{b}=\left(380,500\right)$
\end_inset

 nm
\end_layout

\begin_layout Standard
The Atmospheric Rendering implementation selected the wavelengths:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{r}=650$
\end_inset

 nm
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{g}=510$
\end_inset

 nm
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{b}=475$
\end_inset

 nm
\end_layout

\begin_layout Subsection
Spectral Intensity of Incident Light
\end_layout

\begin_layout Standard
The Atmospheric Rendering implementation defines the spectral intensity
 of incident light 
\begin_inset Formula $I_{I}\left(\lambda\right)$
\end_inset

 from the Sun.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{I}\left(\lambda\right)=SpectralIrridence\left(\lambda\right)\cdot Exposure\cdot SpectralToRGB\left(\lambda\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The spectral irradiance measures the power density of solar radiation at
 specific wavelengths (from measured values found in tables).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
SpectralIrridence\left(r,g,b\right)=\left(0.1526,0.191,0.208\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The exposure represents the amount of light exposure which scales the overall
 intensity.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Exposure=1.0
\]

\end_inset


\end_layout

\begin_layout Standard
The spectral to RGB constants are used to convert specific wavelengths into
 high dynamic range RGB values.
 These constants were calculated by converting wavelengths into CIE XYZ
 color space, then converting XYZ to RGB, followed by normalization and
 scaling.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
SpectralToRGB\left(r,g,b\right)=\left(133.3209,88.51855,112.7552\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The spectral intensity of incident light 
\begin_inset Formula $I_{I}\left(r,g,b\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{I}\left(r,g,b\right)=\left(20.344770,16.907042,23.453083\right)
\]

\end_inset


\end_layout

\begin_layout Subsection
Tone Mapping and Gamma Correction
\end_layout

\begin_layout Standard
The atmospheric simulation inherently outputs high dynamic range (HDR) intensiti
es that must be transformed for display on standard devices as the final
 step.
\end_layout

\begin_layout Standard
Tone mapping transforms the high dynamic range (HDR) intensities such that
 the colors are mapped to the displayable range 
\begin_inset Formula $\left(0.0,1.0\right)$
\end_inset

 while preserving contrast in low-intensity areas and compressing high-intensity
 values.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
ToneMapping\left(\left(r,g,b\right)_{HDR}\right)=1.0-\exp\left(-\left(r,g,b\right)_{HDR}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Gamma correction helps to distribute the compressed values more evenly across
 the perceptual range of human vision.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
GammaCorrection(r,g,b)=\left(r,g,b\right)^{1.0/2.2}
\]

\end_inset


\end_layout

\begin_layout Standard
The combined tone mapping and gamma correction transformation.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(r,g,b\right)=\left(1.0-\exp\left(-\left(r,g,b\right)_{HDR}\right)\right)^{1.0/2.2}
\]

\end_inset


\end_layout

\begin_layout Subsection
Atmospheric Boundary
\end_layout

\begin_layout Standard
The atmospheric simulation models the atmosphere as the region where the
 effects of the atmosphere are non-negligible, extending from the Earth's
 surface to an atmospheric boundary.
\end_layout

\begin_layout Standard
The Scalable and Production Ready Sky and Atmosphere Rendering Technique
 paper uses the following constants for these radii.
\end_layout

\begin_layout Itemize
Radius of the planet: 
\begin_inset Formula $R_{p}=6360000$
\end_inset

 m
\end_layout

\begin_layout Itemize
Radius of the atmospheric boundary: 
\begin_inset Formula $R_{a}=6460000$
\end_inset

 m
\end_layout

\begin_layout Standard

\series bold
Note: 
\series default
Special care may be required to perform some mathematical operations on
 floating point values of these magnitudes.
 To preserve numerical precision, convert single precision floats to double
 precision floats prior to performing dangerous mathematical operations.
 Once complete, the result may be converted back to single precision floats.
 For example, the 
\begin_inset Formula $normalize\left(P\right)$
\end_inset

 function requires computing the square root of the sum of squares of floating
 point values of these magnitudes.
\end_layout

\begin_layout Subsection
Atmospheric Particles
\end_layout

\begin_layout Standard
The atmospheric simulation models two types of particles.
\end_layout

\begin_layout Itemize
Smaller particles (e.g.
 air molecules such as oxygen, nitrogen and carbon dioxide) are modeled
 by Rayleigh scattering.
\end_layout

\begin_layout Itemize
Larger particles (e.g.
 ice crystals, water droplets, dust and air polution) are modeled by Mie
 scattering.
\end_layout

\begin_layout Subsection
Density Function
\end_layout

\begin_layout Standard
The density function expresses the decrease in atmospheric density in dependence
 on 
\begin_inset Formula $h$
\end_inset

, the altitude of a point 
\begin_inset Formula $P$
\end_inset

 over the ground.
\end_layout

\begin_layout Standard
Rayleigh/Mie density function, 
\begin_inset Formula $p_{R,M}\left(h\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p_{R,M}\left(h\right)=\exp\left(-\frac{h}{H_{R,M}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $H_{R}\thickapprox8000m$
\end_inset

 and 
\begin_inset Formula $H_{M}\thickapprox1200m$
\end_inset

 are the Rayleigh/Mie scale heights (e.g.
 the altitude where the density of particles scales down by a 
\begin_inset Formula $\frac{1}{e}$
\end_inset

 term).
\end_layout

\begin_layout Subsection
Phase Function
\end_layout

\begin_layout Standard
The phase function expresses the relative amount of light that is scattered
 in a particular direction due to interactions with a particle.
\end_layout

\begin_layout Standard
Rayleigh scattering phase function, 
\begin_inset Formula $F_{R}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{R}\left(\cos\left(\theta\right)\right)=\frac{3}{4}\left(1+\cos^{2}\left(\theta\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Where the scattering angle 
\begin_inset Formula $\theta$
\end_inset

 represents the angle between the incoming light ray and the scattered light
 ray.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\theta\right)=dot\left(L_{Incoming},L_{Scattered}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The Rayleigh scattering phase function 
\begin_inset Formula $F_{R}$
\end_inset

 may be modified, in practice, to produce more natural results given simplificat
ions introduced for the scattering intensity parameterization.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{R}\left(\cos\left(\theta\right)\right)=\frac{8}{10}\left(\frac{7}{5}+\frac{1}{2}\cos^{2}\left(\theta\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Mie scattering phase function, 
\begin_inset Formula $F_{M}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{M}\left(\cos\left(\theta\right)\right)=\frac{3\left(1-g^{2}\right)}{2\left(2+g^{2}\right)}\frac{\left(1+\cos^{2}\left(\theta\right)\right)}{\left(1+g^{2}-2g\cos\left(\theta\right)\right)^{\frac{3}{2}}}
\]

\end_inset


\end_layout

\begin_layout Standard
The parameter 
\begin_inset Formula $g$
\end_inset

 is an asymmetry factor denoting the width of the forward lobe and is in
 the range 
\begin_inset Formula $\left(-1,1\right)$
\end_inset

.
\end_layout

\begin_layout Standard
The Scalable and Production Ready Sky and Atmosphere Rendering Technique
 paper uses 
\begin_inset Formula $g=0.8$
\end_inset

.
\end_layout

\begin_layout Subsection
Scattering, Absorption and Extinction Coefficients
\end_layout

\begin_layout Standard
The scattering/absorption/extinction coefficients represents the probability
 of light being scattered/absorbed/scattered+absorbed as it travels through
 a medium.
\end_layout

\begin_layout Standard
The Scalable and Production Ready Sky and Atmosphere Rendering Technique
 paper uses the following coefficients.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
β_{R}^{s}\left(r,g,b\right)=(5.802e-6,13.558e-6,33.1e-6)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
β_{R}^{a}\left(r,g,b\right)=(0,0,0)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\beta_{M}^{s}=3.996e-6
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\beta_{M}^{a}=4.40e-6
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\beta_{R,M}^{e}=\beta_{R,M}^{s}+\beta_{R,M}^{a}
\]

\end_inset


\end_layout

\begin_layout Subsection
Numerical Integration
\end_layout

\begin_layout Standard
The atmospheric simulation requires the computation of integrals that must
 be approximated using numerical integration due to complexity of the equations.
\end_layout

\begin_layout Standard
The trapezoidal rule may be used to approximate 1D integrals of the function
 
\begin_inset Formula $f\left(x\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\int_{a}^{b}f\left(x\right)dx\thickapprox\sum_{i=1}^{n}\frac{f\left(x_{i-1}\right)+f\left(x_{i}\right)}{2}\cdot dx
\]

\end_inset


\end_layout

\begin_layout Standard
Where the parameters are defined:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
dx=\frac{x_{n}-x_{0}}{n}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{i}=x_{0}+i\cdot dx
\]

\end_inset


\end_layout

\begin_layout Standard
The endpoints of the 1D integral are defined as 
\begin_inset Formula $x_{0}=a$
\end_inset

 and 
\begin_inset Formula $x_{n}=b$
\end_inset

.
\end_layout

\begin_layout Standard
The trapezoidal rule may be extended to approximate 2D integrals of the
 function 
\begin_inset Formula $f\left(x,y\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\int_{a}^{b}\int_{c}^{d}f\left(x,y\right)dy\cdot dx\approx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{4}dx\cdot dy\cdot\left(f\left(x_{0},y_{0}\right)+f\left(x_{n},y_{0}\right)+f\left(x_{0},y_{m}\right)+f\left(x_{n},y_{m}\right)+\right.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
2\sum_{j=1}^{n-1}f\left(x_{j},y_{0}\right)+2\sum_{j=1}^{n-1}f\left(x_{j},y_{m}\right)+2\sum_{i=1}^{m-1}f\left(x_{0},y_{i}\right)+2\sum_{i=1}^{m-1}f\left(x_{n},y_{i}\right)+
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left.4\sum_{i=1}^{m-1}\sum_{j=1}^{n-1}f\left(x_{j},y_{i}\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Where the parameters are defined:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
dx=\frac{x_{n}-x_{0}}{n}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
dy=\frac{y_{m}-y_{0}}{m}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{j}=x_{0}+j\cdot dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{i}=y_{0}+i\cdot dy
\]

\end_inset


\end_layout

\begin_layout Standard
The edges of the 2D integral are defined as 
\begin_inset Formula $x_{0}=a$
\end_inset

, 
\begin_inset Formula $x_{n}=b$
\end_inset

, 
\begin_inset Formula $y_{0}=c$
\end_inset

 and 
\begin_inset Formula $y_{m}=d$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Note:
\series default
 The trapezoidal rule for 2D integrals can also be separated into two passes
 by applying the 1D rule in the horizontal and vertical directions.
 The implementation using separate passes may be faster, however, the accuracy
 may be lower due to strong coupling between the 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 variables.
 As a result, the 2D approach is generally preferred for its robustness
 unless the function is well-understood and separability is confirmed.
\end_layout

\begin_layout Subsection
Transmittance
\end_layout

\begin_layout Standard
The transmittance function 
\begin_inset Formula $T\left(P_{1},P_{2},\lambda\right)$
\end_inset

 expresses the amount of attenuated light after it passes between two points
 through a medium.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(P_{1},P_{2},\lambda\right)=\exp\left(-t\left(P_{1},P_{2},\lambda\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
t\left(P_{1},P_{2},\lambda\right)=\beta_{R,M}^{e}\left(\lambda\right)\int_{P_{1}}^{P_{2}}p_{R,M}\left(h\left(P\right)\right)ds
\]

\end_inset


\end_layout

\begin_layout Standard
Where the parameters are defined:
\end_layout

\begin_layout Itemize
\begin_inset Formula $P$
\end_inset

: Sample point parameterized by 
\begin_inset Formula $s$
\end_inset

, 
\begin_inset Formula $P=P_{1}+s\left(P_{2}-P_{1}\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $h$
\end_inset

: Height is parameterized by P, 
\begin_inset Formula $h\left(P\right)=\left|P\right|-R_{p}$
\end_inset


\end_layout

\begin_layout Standard
The outputs are a 4-component vectors 
\begin_inset Formula $\left(T_{R_{r}},T_{R_{g}},T_{R_{b}},T_{M}\right)$
\end_inset

 and 
\begin_inset Formula $\left(t_{R_{r}},t_{R_{g}},t_{R_{b}},t_{M}\right)$
\end_inset

.
\end_layout

\begin_layout Standard
The Rendering Parametrizable Planetary Atmospheres with Multiple Scattering
 in Real-Time paper uses numerical integration with 
\begin_inset Formula $n=30$
\end_inset

 steps to compute the transmittance.
\end_layout

\begin_layout Standard
The light ray may change direction as it interacts with particles while
 passing through a medium.
 Consider a light ray which passes between the points 
\begin_inset Formula $P_{1},P_{2},P_{3}$
\end_inset

 where the point 
\begin_inset Formula $P_{2}$
\end_inset

 represents an interaction which changes the direction of the light ray.
 The transmittance between the points 
\begin_inset Formula $P_{1},P_{2},P_{3}$
\end_inset

 may be computed as the product of the transmittance between each segment.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(P_{1},P_{2},\lambda\right)\cdot T\left(P_{2},P_{3},\lambda\right)=\exp\left(-t\left(P_{1},P_{2},\lambda\right)\right)\cdot\exp\left(-t\left(P_{2},P_{3},\lambda\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The implementation may utilize the laws of exponents rule for product of
 powers to optimize the computation.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a^{m}\cdot a^{n}=a^{m+n}
\]

\end_inset


\end_layout

\begin_layout Standard
Where the functions 
\begin_inset Formula $t\left(\right)$
\end_inset

 may be rearranged in order to group similar terms.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(P_{1},P_{2},\lambda\right)\cdot T\left(P_{2},P_{3},\lambda\right)=\exp\left(-t\left(P_{1},P_{2},\lambda\right)-t\left(P_{2},P_{3},\lambda\right)\right)
\]

\end_inset


\end_layout

\begin_layout Section
Sky Rendering
\end_layout

\begin_layout Subsection
Single-scattering
\end_layout

\begin_layout Standard
The single-scattering equation 
\begin_inset Formula $I_{S_{R,M}}^{\left(1\right)}$
\end_inset

 describes the intensity of light that reaches an observer 
\begin_inset Formula $P_{0}$
\end_inset

 looking in the direction 
\begin_inset Formula $V$
\end_inset

 after exactly one scattering event.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S_{R,M}}^{\left(1\right)}\left(P_{0},V,L,\lambda\right)=I_{I}\left(\lambda\right)\cdot F_{R,M}\left(dot\left(L,-V\right)\right)\cdot\frac{\beta_{R,M}\left(\lambda\right)}{4\pi}\cdot
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cdot\int_{P_{a}}^{P_{b}}p_{R,M}\left(h\left(P\right)\right)\cdot T\left(P_{c},P,\lambda\right)\cdot T\left(P,P_{a},\lambda\right)ds
\]

\end_inset


\end_layout

\begin_layout Standard
Where the following parameters are defined:
\end_layout

\begin_layout Itemize
\begin_inset Formula $P$
\end_inset

: Sample point parameterized by 
\begin_inset Formula $s$
\end_inset

, 
\begin_inset Formula $P=P_{a}+s\left(P_{b}-P_{a}\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $h$
\end_inset

: Height is parameterized by P, 
\begin_inset Formula $h\left(P\right)=\left|P\right|-R_{p}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $V$
\end_inset

: Viewing direction, 
\begin_inset Formula $V=nomalize\left(P_{b}-P_{a}\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $L$
\end_inset

: Direction of light from the Sun
\end_layout

\begin_layout Itemize
\begin_inset Formula $\theta$
\end_inset

: Scattering angle, 
\begin_inset Formula $\cos\left(\theta\right)=dot\left(L,-V\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $P_{a}$
\end_inset

: First point along 
\begin_inset Formula $V$
\end_inset

 where the atmosphere is nonzero (e.g.
 
\begin_inset Formula $P_{0}$
\end_inset

 or the atmospheric boundary).
\end_layout

\begin_layout Itemize
\begin_inset Formula $P_{b}$
\end_inset

: Last point along 
\begin_inset Formula $V$
\end_inset

 where the atmosphere is nonzero (e.g.
 the atmospheric boundary or the Earth's surface).
\end_layout

\begin_layout Itemize
\begin_inset Formula $P_{c}$
\end_inset

: The nearest intersection point along the ray from 
\begin_inset Formula $P$
\end_inset

 in the direction of the Sun (e.g.
 the atmosphere boundary or the Earth's surface).
 If the ray intersects the Earth then the point 
\begin_inset Formula $P$
\end_inset

 is shadowed by the Earth and does not contribute to the single-scattering
 intensity.
 However, the point 
\begin_inset Formula $P$
\end_inset

 may still contribute to the multiple scattering intensity as described
 in the next section.
\end_layout

\begin_layout Standard
The phase function 
\begin_inset Formula $F_{R,M}$
\end_inset

 can be excluded from integration if we assume all light rays coming from
 the Sun are parallel.
\end_layout

\begin_layout Standard
The total intensity of the single-scattering light:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S}^{\left(1\right)}=I_{S_{R}}^{\left(1\right)}+I_{S_{M}}^{\left(1\right)}
\]

\end_inset


\end_layout

\begin_layout Subsection
Multiple-scattering
\end_layout

\begin_layout Standard
The multiple-scattering equation 
\begin_inset Formula $I_{S_{R,M}}^{\left(k\right)}$
\end_inset

 describes the intensity of light that reaches an observer 
\begin_inset Formula $P_{0}$
\end_inset

 looking in the direction 
\begin_inset Formula $V$
\end_inset

 for the kth scattering event.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S_{R,M}}^{\left(k\right)}\left(P_{0},V,L,\lambda\right)=\frac{\beta_{R,M}\left(\lambda\right)}{4\pi}\cdot
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cdot\int_{P_{a}}^{P_{b}}G_{R,M}^{\left(k-1\right)}\left(P,V,L,\lambda\right)\cdot p_{R,M}\left(h\left(P\right)\right)\cdot T\left(P,P_{a},\lambda\right)ds
\]

\end_inset


\end_layout

\begin_layout Standard
Where the gather-scattering equation 
\begin_inset Formula $G_{R,M}^{\left(k\right)}$
\end_inset

 describes the intensity of light that reaches the point 
\begin_inset Formula $P$
\end_inset

 that is scattered from all directions 
\begin_inset Formula $\omega$
\end_inset

 towards the observer for the kth order scattering event.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
G_{R,M}^{\left(k\right)}\left(P,V,L,\lambda\right)=\int_{4\pi}F_{R,M}\left(dot\left(-\omega,-V\right)\right)\cdot I_{S_{R,M}}^{\left(k\right)}\left(P,\omega,L,\lambda\right)d\omega
\]

\end_inset


\end_layout

\begin_layout Standard
Where the following parameters are defined:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\omega$
\end_inset

: Gathering direction for the kth order scattered light source
\end_layout

\begin_layout Itemize
\begin_inset Formula $\theta$
\end_inset

: Scattering angle, 
\begin_inset Formula $\cos\left(\theta\right)=dot\left(-\omega,-V\right)$
\end_inset


\end_layout

\begin_layout Standard
The gather-scattering equation 
\begin_inset Formula $G_{R,M}^{\left(k\right)}$
\end_inset

 requires the computation of an integral over all directions 
\begin_inset Formula $\omega$
\end_inset

.
 This can be accomplished by rewriting the equation using a spherical coordinate
 system.
 For example, a function 
\begin_inset Formula $f\left(\omega\right)$
\end_inset

 can be integrated over every direction by the double integral.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\int_{4\pi}f\left(\omega\right)d\omega=\int_{\varPhi=0}^{2\pi}\int_{\varTheta=0}^{\pi}f\left(\varTheta,\varPhi\right)\sin\left(\varTheta\right)d\varTheta\cdot d\varPhi
\]

\end_inset


\end_layout

\begin_layout Standard
Where the gathering direction 
\begin_inset Formula $\omega$
\end_inset

 and element area 
\begin_inset Formula $d\omega$
\end_inset

 are defined:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\omega=\left(\sin\left(\varTheta\right)\cos\left(\varPhi\right),\sin\left(\varTheta\right)\sin\left(\varPhi\right),\cos\left(\varTheta\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d\omega=\sin\left(\varTheta\right)d\varTheta\cdot d\varPhi
\]

\end_inset


\end_layout

\begin_layout Standard
The first order of 
\begin_inset Formula $I_{S_{R,M}}^{\left(k\right)}$
\end_inset

 is initialized with the single-scattering output 
\begin_inset Formula $I_{S_{R,M}}^{\left(1\right)}$
\end_inset

 while subsequent orders of 
\begin_inset Formula $I_{S_{R,M}}^{\left(k\right)}$
\end_inset

 are computed iteratively by sampling the previous output 
\begin_inset Formula $I_{S_{R,M}}^{\left(k-1\right)}$
\end_inset

.
\end_layout

\begin_layout Standard
Observe that the light vector 
\begin_inset Formula $L$
\end_inset

 is used in computation of the phase function 
\begin_inset Formula $F_{R,M}$
\end_inset

 for the single-scattering equation 
\begin_inset Formula $I_{S_{R,M}}^{\left(1\right)}$
\end_inset

, but not for the gather-scattering equation 
\begin_inset Formula $G_{R,M}^{\left(k\right)}$
\end_inset

.
 As a result, the phase function 
\begin_inset Formula $F_{R,M}$
\end_inset

 in the gather-scattering equation 
\begin_inset Formula $G_{R,M}^{\left(k\right)}$
\end_inset

 may not be excluded from integration because 
\begin_inset Formula $\theta$
\end_inset

 depends on the integration variable 
\begin_inset Formula $\omega$
\end_inset

.
 The light vector 
\begin_inset Formula $L$
\end_inset

 is also required to parameterize the Sun-Zenith angle for all scattering
 orders as shown in subsequent sections.
\end_layout

\begin_layout Standard
The total intensity of the multiple-scattering light:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S}=\sum_{k=1}^{K}I_{S_{R}}^{\left(k\right)}+I_{S_{M}}^{\left(k\right)}=I_{S_{R}}+I_{S_{M}}
\]

\end_inset


\end_layout

\begin_layout Subsection
Scattering Equation Factorization
\end_layout

\begin_layout Standard
The following derivation factors the constant phase function 
\begin_inset Formula $F_{R,M}\left(dot\left(L,-V\right)\right)$
\end_inset

 and the spectral intensity of incident light 
\begin_inset Formula $I_{I}\left(\lambda\right)$
\end_inset

 from the scattering equations.
\end_layout

\begin_layout Standard
The factored single-scattering equation 
\begin_inset Formula $\bar{I}_{S_{R,M}}^{\left(1\right)}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{I}_{S_{R,M}}^{\left(1\right)}\left(P_{0},V,L,\lambda\right)=\frac{\beta_{R,M}\left(\lambda\right)}{4\pi}\cdot
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cdot\int_{P_{a}}^{P_{b}}p_{R,M}\left(h\left(P\right)\right)\cdot T\left(P_{c},P,\lambda\right)\cdot T\left(P,P_{a},\lambda\right)ds
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $I_{S_{R,M}}^{\left(1\right)}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S_{R,M}}^{\left(1\right)}\left(P_{0},V,L,\lambda\right)=I_{I}\left(\lambda\right)\cdot F_{R,M}\left(dot\left(L,-V\right)\right)\cdot\bar{I}_{S_{R,M}}^{\left(1\right)}\left(P_{0},V,L,\lambda\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The factored multiple-scattering equation 
\begin_inset Formula $\bar{I}_{S_{R,M}}^{\left(k\right)}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{I}_{S_{R,M}}^{\left(k\right)}\left(P_{0},V,L,\lambda\right)=\frac{\beta_{R,M}\left(\lambda\right)}{4\pi}\cdot
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cdot\int_{P_{a}}^{P_{b}}\bar{G}_{R,M}^{\left(k-1\right)}\left(P,V,L,\lambda\right)\cdot p_{R,M}\left(h\left(P\right)\right)\cdot T\left(P,P_{a},\lambda\right)ds
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $I_{S_{R,M}}^{\left(k\right)}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S_{R,M}}^{\left(k\right)}\left(P_{0},V,L,\lambda\right)=I_{I}\left(\lambda\right)\cdot F_{R,M}\left(dot\left(L,-V\right)\right)\cdot\bar{I}_{S_{R,M}}^{\left(k\right)}\left(P_{0},V,L,\lambda\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The factored gather-scattering equation 
\begin_inset Formula $\bar{G}_{R,M}^{\left(k\right)}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{G}_{R,M}^{\left(k\right)}\left(P,V,L,\lambda\right)=\int_{4\pi}F_{R,M}\left(dot\left(-\omega,-V\right)\right)\cdot\bar{I}_{S_{R,M}}^{\left(k\right)}\left(P,\omega,L,\lambda\right)d\omega
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $G_{R,M}^{\left(k\right)}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
G_{R,M}^{\left(k\right)}\left(P,V,L,\lambda\right)=I_{I}\left(\lambda\right)\cdot F_{R,M}\left(dot\left(L,-V\right)\right)\cdot\bar{G}_{R,M}^{\left(k\right)}\left(P,V,L,\lambda\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The total scattering intensity using the factored equations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
I_{S}=I_{I}\left(\lambda\right)\cdot\left(F_{R}\left(dot\left(L,-V\right)\right)\cdot\bar{I}_{S_{R}}+F_{M}\left(dot\left(L,-V\right)\right)\cdot\bar{I}_{S_{M}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
This factorization includes two important properties that facilitate an
 efficient rendering implementation.
 First, the wavelength dependent components, 
\begin_inset Formula $I_{I}\left(\lambda\right)$
\end_inset

 and 
\begin_inset Formula $\bar{I}_{S_{R}}$
\end_inset

, may be separated from the wavelength independent component 
\begin_inset Formula $\bar{I}_{S_{M}}$
\end_inset

.
 The spectral intensity of incident light 
\begin_inset Formula $I_{I}\left(\lambda\right)$
\end_inset

 may be applied directly in the fragment shader and the factored scattering
 intensity 
\begin_inset Formula $\bar{I}_{S}$
\end_inset

 may be determined by performing a single 3D texture fetch.
 The Rayleigh factored scattering intensity 
\begin_inset Formula $\bar{I}_{S_{R}}$
\end_inset

 is stored in the RGB channels while the Mie factored scattering intensity
 
\begin_inset Formula $\bar{I}_{S_{M}}$
\end_inset

 is stored in the alpha channel.
 Second, the constant phase function 
\begin_inset Formula $F_{R,M}\left(dot\left(L,-V\right)\right)$
\end_inset

 may be applied directly in the fragment shader which partially accounts
 for the omitted Sun-View Azimuth parameter.
 These properties are fundamental to the scattering intensity parameterization
 that is described in the next section.
\end_layout

\begin_layout Subsection
Scattering Intensity Parameterization
\end_layout

\begin_layout Subsubsection
Canonical Form
\end_layout

\begin_layout Standard
To precompute every scattering intensity from every position 
\begin_inset Formula $P_{0}\left(x,y,z\right)$
\end_inset

, in every viewing direction 
\begin_inset Formula $V\left(x,y,z\right)$
\end_inset

 and every light direction 
\begin_inset Formula $L\left(x,y,z\right)$
\end_inset

 would require 9 parameters.
 However, by taking advantage of symmetries and making a few assumptions
 the parameter count may be reduced to 4 scalar parameters.
\end_layout

\begin_layout Itemize
Altitude: 
\begin_inset Formula $h\in\left[0,H_{a}\right]$
\end_inset

 where 
\begin_inset Formula $H_{a}=R_{a}-R_{p}$
\end_inset


\end_layout

\begin_layout Itemize
View-Zenith Angle: 
\begin_inset Formula $\phi\in\left[0,\pi\right]$
\end_inset

 where 
\begin_inset Formula $\cos\left(\phi\right)=dot\left(V,Zenith\right)$
\end_inset


\end_layout

\begin_layout Itemize
Sun-Zenith Angle 
\begin_inset Formula $\delta\in\left[0,\pi\right]$
\end_inset

 where 
\begin_inset Formula $\cos\left(\delta\right)=dot\left(-L,Zenith\right)$
\end_inset


\end_layout

\begin_layout Itemize
Sun-View Azimuth 
\begin_inset Formula $\omega\in\left[0,\pi\right]$
\end_inset

 where 
\begin_inset Formula $cos\left(\omega\right)=dot\left(proj\left(V\right),proj\left(-L\right)\right)$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Note: 
\series default
The the Sun-View Azimuth 
\begin_inset Formula $\omega$
\end_inset

 is a separate variable from the gathering direction 
\begin_inset Formula $\omega$
\end_inset

 described in other sections.
\end_layout

\begin_layout Standard
The Zenith is the up vector for the point 
\begin_inset Formula $P_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Zenith=normalize\left(P_{0}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Formula $proj\left(X\right)$
\end_inset

 function projects the unit vector 
\begin_inset Formula $X$
\end_inset

 onto the horizontal plane perpendicular to the Zenith.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
proj(X)=normalize(X-dot(X,Zenith)\cdot Zenith)
\]

\end_inset


\end_layout

\begin_layout Standard
The following diagram shows canonical form of the scattering intensity parameter
ization.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename canonical-form.png
	lyxscale 15
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
The parameter 
\begin_inset Formula $h$
\end_inset

 may be converted to the canonical form 
\begin_inset Formula $P_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{0}=\left(0,0,h+R_{p}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The parameters 
\begin_inset Formula $\left(h,\phi,\delta\right)$
\end_inset

 may be converted to the canonical form vectors 
\begin_inset Formula $V$
\end_inset

 and 
\begin_inset Formula $L$
\end_inset

 by using the spherical coordinate system.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x=r\sin\left(\Theta\right)\cos\left(\varPhi\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y=r\sin\left(\varTheta\right)\sin\left(\varPhi\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
z=r\cos\left(\varTheta\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Therefore 
\begin_inset Formula $V$
\end_inset

, 
\begin_inset Formula $Sun$
\end_inset

 and 
\begin_inset Formula $L$
\end_inset

 are defined where 
\begin_inset Formula $r=1$
\end_inset

, 
\begin_inset Formula $\varTheta=\phi$
\end_inset

 for V, 
\begin_inset Formula $\varTheta=\delta$
\end_inset

 for Sun and 
\begin_inset Formula $\varPhi=\omega=0$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V=\left(\sin\left(\phi\right),0,\cos\left(\phi\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Sun=\left(\sin\left(\delta\right),0,\cos\left(\delta\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L=-Sun
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Linear Mapping
\end_layout

\begin_layout Standard
The parameters 
\begin_inset Formula $\left(h,\cos\left(\phi\right),\cos\left(\delta\right)\right)$
\end_inset

 may be converted to 3D texture coordinates 
\begin_inset Formula $\left(u,v,w\right)$
\end_inset

 for shader lookups.
\end_layout

\begin_layout Standard
The most straightforward mapping described by the Efficient and Dynamic
 Atmospheric Scattering paper is a linear mapping.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=\frac{h}{H_{a}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v=\frac{\cos\left(\phi\right)+1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w=\frac{\cos\left(\delta\right)+1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
The linear mappings may be converted from 3D texture coordinates as follows.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
h=u\cdot H_{a}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi\right)=2v-1
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\delta\right)=2w-1
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Nonlinear Mapping
\end_layout

\begin_layout Standard
Linear mappings are typically replaced with nonlinear mappings in order
 to optimize the parameterization space.
 This is achieved by eliminating unused values and improving precision for
 critical values by compressing less critical values.
 The Atmospheric Rendering implementation proposed the following nonlinear
 mapping.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=\sqrt{\frac{h}{H_{a}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v=\frac{sign\left(\cos\left(\phi\right)\right)\cdot\left|\cos\left(\phi\right)\right|^{\frac{1}{3}}+1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w=\frac{sign\left(\cos\left(\delta\right)\right)\cdot\left|\cos\left(\delta\right)\right|^{\frac{1}{3}}+1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
The nonlinear mappings may be converted from 3D texture coordinates as follows.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
h=u^{2}\cdot H_{a}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi\right)=sign\left(2v-1\right)\cdot\left|2v-1\right|^{3}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\delta\right)=sign\left(2w-1\right)\cdot\left|2w-1\right|^{3}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Power Mapping
\end_layout

\begin_layout Standard
The linear and nonlinear mappings may be generalized for an arbitrary power.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u\left(h,p_{u}\right)=\left(\frac{h}{H_{a}}\right)^{\frac{1}{p_{u}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v\left(\phi,p_{v}\right)=\frac{sign\left(\cos\left(\phi\right)\right)\cdot\left|\cos\left(\phi\right)\right|^{\frac{1}{p_{v}}}+1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w\left(\delta,p_{w}\right)=\frac{sign\left(\cos\left(\delta\right)\right)\cdot\left|\cos\left(\delta\right)\right|^{\frac{1}{p_{w}}}+1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
The power mappings may be converted from 3D texture coordinates as follows.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
h=u^{p_{u}}\cdot H_{a}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi\right)=sign\left(2v-1\right)\cdot\left|2v-1\right|^{p_{v}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\delta\right)=sign\left(2w-1\right)\cdot\left|2w-1\right|^{p_{w}}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Weighted Power Mapping
\end_layout

\begin_layout Standard
The power mapping based approaches have several problems which lead to inefficie
nt representation of the View-Zenith Angle.
\end_layout

\begin_layout Itemize
The horizon 
\begin_inset Formula $\phi_{H}$
\end_inset

 increases from 90 degrees at ground level towards 180 degrees as the height
 increases.
 However, the power mapping approach fixes the horizon 
\begin_inset Formula $\phi_{H}$
\end_inset

 at 90 degrees for all heights which causes incorrect angles to be compressed
 as the height increases.
\end_layout

\begin_layout Itemize
The horizon also vanishes quickly as the height increases.
 As a result, the View-Zenith Angle 
\begin_inset Formula $\phi$
\end_inset

 may be compressed around the horizon using a low power 
\begin_inset Formula $p_{v}$
\end_inset

 near gound level but requires a higher power 
\begin_inset Formula $p_{v}$
\end_inset

 as the height increases.
 Since the power mapping approach uses a single low power 
\begin_inset Formula $p_{v}$
\end_inset

, compression is ineffective as the height increases.
\end_layout

\begin_layout Itemize
A large percentage of the texture space is dedicated to parameters which
 represent little or no atmosphere.
 For example, at ground level there is no atmosphere when 
\begin_inset Formula $V$
\end_inset

 is downwards.
\end_layout

\begin_layout Standard
The weighted power mapping addresses these problems by incorporating the
 height 
\begin_inset Formula $h$
\end_inset

 into the parameterization for the 
\begin_inset Formula $v$
\end_inset

 coordinate.
\end_layout

\begin_layout Standard
The horizon 
\begin_inset Formula $\phi_{H}$
\end_inset

 is defined by a triangle consisting of a point at the center of the planet,
 a point tangent to the planet and a point at the observer.
 The function 
\begin_inset Formula $\cos\left(\phi_{H}\right)$
\end_inset

 may be derived given the trigonometric identies 
\begin_inset Formula $\cos\left(\theta\right)=\frac{adj}{hyp}$
\end_inset

, 
\begin_inset Formula $a^{2}+b^{2}=c^{2}$
\end_inset

 and the fact that the horizon 
\begin_inset Formula $\phi_{H}\geq90$
\end_inset

 (e.g.
 
\begin_inset Formula $\cos\left(\phi_{H}\right)\leq0$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi_{H}\right)=-\frac{\sqrt{\left(R_{p}+h\right)^{2}-R_{p}^{2}}}{R_{p}+h}
\]

\end_inset


\end_layout

\begin_layout Standard
The cosine of the horizon angle 
\begin_inset Formula $\cos\left(\phi_{H}\right)$
\end_inset

 and the horizontal angle 
\begin_inset Formula $\cos\left(\phi_{90}\right)=0$
\end_inset

 are used to define several regions (
\begin_inset Formula $U$
\end_inset

: upper atmosphere, 
\begin_inset Formula $L$
\end_inset

: lower atmosphere, 
\begin_inset Formula $S$
\end_inset

: surface) which may be parameterized independently.
\end_layout

\begin_layout Standard
In general, each region is defined by a weight 
\begin_inset Formula $w_{i}\in\left(0,1\right)$
\end_inset

, a power mapping 
\begin_inset Formula $f\left(\cos\left(\phi\right),p_{i}\right)\in\left(0,1\right)$
\end_inset

 and an offset 
\begin_inset Formula $o_{i}\in\left(0,1\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v_{i}=w_{i}\cdot\left(\frac{\cos\left(\phi\right)-\cos\left(\phi_{min}\right)}{\cos\left(\phi_{max}\right)-\cos\left(\phi_{min}\right)}\right)^{\frac{1}{p_{i}}}+o{}_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
The power base will never be negative and therefore the sign and abs functions
 are not required.
\end_layout

\begin_layout Standard
The upper atmosphere region is defined by the angles, 
\begin_inset Formula $0\leq\cos\left(\phi\right)\leq1$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v_{U}\left(\phi\right)=w_{U}\cdot\left(\cos\left(\phi\right)\right)^{\frac{1}{p_{U}}}+\left(w_{L}+w_{S}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The lower atmosphere region is defined by the angles, 
\begin_inset Formula $\cos\left(\phi_{H}\right)\leq\cos\left(\phi\right)<0$
\end_inset

.
 Since 
\begin_inset Formula $\cos\left(\phi_{H}\right)=0$
\end_inset

 when 
\begin_inset Formula $h=0$
\end_inset

, include 
\begin_inset Formula $\epsilon=1e-5$
\end_inset

 for numerical stability.
 Also, observe that 
\begin_inset Formula $w_{L}=0$
\end_inset

 when 
\begin_inset Formula $h=0$
\end_inset

 since 
\begin_inset Formula $u\left(h,p_{u}\right)=0.$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v_{L}\left(\phi\right)=w_{L}\cdot\left(\frac{\cos\left(\phi\right)-\cos\left(\phi_{H}\right)}{\max\left(-\cos\left(\phi_{H}\right),\epsilon\right)}\right)^{\frac{1}{p_{L}}}+w_{S}
\]

\end_inset


\end_layout

\begin_layout Standard
The surface region is defined by the angles, 
\begin_inset Formula $-1\leq\cos\left(\phi\right)<\cos\left(\phi_{H}\right)$
\end_inset

.
 The one-minus term in 
\begin_inset Formula $v_{S}$
\end_inset

 ensures continuity between 
\begin_inset Formula $v_{L}$
\end_inset

 and 
\begin_inset Formula $v_{S}$
\end_inset

 after crossing the horizon 
\begin_inset Formula $\phi_{H}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v_{S}\left(\phi\right)=w_{S}\cdot\left(1-\left(\frac{\cos\left(\phi\right)-\cos\left(\phi_{H}\right)}{-1-\cos\left(\phi_{H}\right)}\right)^{\frac{1}{p_{S}}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The weights define the amount of texture space allocated for each region.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w_{U}=1-w_{L}-w_{S}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w_{L}=w_{L}^{1}\cdot u
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w_{S}=w_{S}^{1}\cdot u+w_{S}^{0}
\]

\end_inset


\end_layout

\begin_layout Standard
The sum of the weights is 
\begin_inset Formula $w_{U}+w_{L}+w_{S}=1$
\end_inset

.
 In order to optimize the texture space near ground level, the weights 
\begin_inset Formula $w_{L}^{1}$
\end_inset

 and 
\begin_inset Formula $w_{S}^{1}$
\end_inset

 are scaled by 
\begin_inset Formula $u$
\end_inset

.
 This causes the weights 
\begin_inset Formula $w_{L}$
\end_inset

 and 
\begin_inset Formula $w_{S}$
\end_inset

 to grow from a minimum at 
\begin_inset Formula $u=0$
\end_inset

 to their maximum at 
\begin_inset Formula $u=1$
\end_inset

.
 The weight 
\begin_inset Formula $w_{U}$
\end_inset

 is defined as the remainder of the other weights, causing it to shrink
 from the maximum at 
\begin_inset Formula $u=0$
\end_inset

 to its minimum at 
\begin_inset Formula $u=1$
\end_inset

.
 The weight 
\begin_inset Formula $w_{S}^{0}$
\end_inset

 defines a minimal texture parameter space for the surface region at 
\begin_inset Formula $u=0$
\end_inset

.
\end_layout

\begin_layout Standard
The weighted power mappings may be converted from 3D texture coordinates
 as follows.
\end_layout

\begin_layout Standard
When 
\begin_inset Formula $v\geq w_{L}+w_{S}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi\right)=\left(\frac{v-\left(w_{L}+w_{S}\right)}{w_{U}}\right)^{p_{U}}
\]

\end_inset


\end_layout

\begin_layout Standard
When 
\begin_inset Formula $v\geq w_{S}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi\right)=-\cos\left(\phi_{H}\right)\left(\frac{v-w_{S}}{\max\left(w_{L},\epsilon\right)}\right)^{p_{L}}+\cos\left(\phi_{H}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Otherwise:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\left(\phi\right)=\left(-1-\cos\left(\phi_{H}\right)\right)\left(1-\frac{v}{w_{S}}\right)^{p_{S}}+\cos\left(\phi_{H}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The following diagram shows a visualization of the weighted power mapping
 regions (
\begin_inset Formula $U$
\end_inset

: blue, 
\begin_inset Formula $L$
\end_inset

: red, 
\begin_inset Formula $S$
\end_inset

: green) for 
\begin_inset Formula $h=H_{a}$
\end_inset

 and 
\begin_inset Formula $h=0$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename weighted-power-detail.jpg
	lyxscale 50
	width 50page%

\end_inset


\end_layout

\begin_layout Subsubsection
Mapping Comparision
\end_layout

\begin_layout Standard
The following diagram shows a comparision between the linear mapping, nonlinear
 mapping, weighted power mapping and 3D texture coordinates of the scattering
 intensity 
\begin_inset Formula $I_{S}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename mapping-comparison.jpg
	lyxscale 50
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
The following parameters where used for the weighted power mapping.
\end_layout

\begin_layout Itemize
\begin_inset Formula $p_{U},p_{L},p_{S}=2,1,2$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $w_{L}^{1},w_{S}^{1},w_{S}^{0}=\frac{20}{32},\frac{4}{32},\frac{4}{32}$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Note:
\series default
 
\begin_inset Formula $p_{L}=1$
\end_inset

 is important to improve numerical stability at the boundary between the
 upper and lower atmosphere.
\end_layout

\begin_layout Subsubsection
Sun-View Azimuth Mapping
\end_layout

\begin_layout Standard
To reduce the parameter count, the Rendering Parametrizable Planetary Atmosphere
s with Multiple Scattering in Real-Time paper proposes to omit the parameter
 
\begin_inset Formula $\omega$
\end_inset

 from precomputation.
 This omission causes uniformity of the atmospheric color with respect to
 
\begin_inset Formula $\omega$
\end_inset

 and is primarily visible during sunsets in parts of the sky where there
 is no direct illumunation.
 Two techniques are proposed to address the omission of 
\begin_inset Formula $\omega$
\end_inset

.
 First, the modified Rayleigh scattering phase function 
\begin_inset Formula $F_{R}$
\end_inset

 ensures that the darkest area of the sky during sunset is on the opposite
 side of the sky from the Sun.
 Second, the parameter 
\begin_inset Formula $\omega$
\end_inset

 is dependent on the scattering angle 
\begin_inset Formula $\theta$
\end_inset

.
 By evaluating the constant phase function 
\begin_inset Formula $F_{R,M}\left(dot\left(L,-V\right)\right)$
\end_inset

 during rendering, we are able to reduce the uniformity of the atmospheric
 color with respect to 
\begin_inset Formula $\omega$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Texture Coordinates and Array Indices
\end_layout

\begin_layout Standard
The 3D array indices 
\begin_inset Formula $\left(x,y,z\right)$
\end_inset

 with dimensions 
\begin_inset Formula $\left(width,height,depth\right)$
\end_inset

 may be converted to 3D texture coordinates 
\begin_inset Formula $\left(u,v,w\right)$
\end_inset

 as follows.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(u,v,w\right)=\left(\frac{x}{width-1},\frac{y}{height-1},\frac{z}{depth-1}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The 3D array indices 
\begin_inset Formula $\left(x,y,z\right)$
\end_inset

 may be interpreted as a 1D array index 
\begin_inset Formula $\left(i\right)$
\end_inset

 as follows.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
i=x+y\cdot width+z\cdot width\cdot height
\]

\end_inset


\end_layout

\begin_layout Standard
The Efficient and Dynamic Atmospheric Scattering paper uses the following
 texture dimensions where optional optimizations discussed for 
\begin_inset Formula $v$
\end_inset

 component.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(width,height,depth\right)=\left(32,256|128|64,32\right)
\]

\end_inset


\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Itemize
Rendering Parametrizable Planetary Atmospheres with Multiple Scattering
 in Real-Time
\end_layout

\begin_deeper
\begin_layout Itemize
http://www.klayge.org/material/4_0/Atmospheric/Rendering%20Parametrizable%20Planet
ary%20Atmospheres%20with%20Multiple%20Scattering%20in%20Real-Time.pdf
\end_layout

\end_deeper
\begin_layout Itemize
Atmospheric Rendering
\end_layout

\begin_deeper
\begin_layout Itemize
https://github.com/danielshervheim/atmosphere
\end_layout

\end_deeper
\begin_layout Itemize
Efficient and Dynamic Atmospheric Scattering
\end_layout

\begin_deeper
\begin_layout Itemize
https://publications.lib.chalmers.se/records/fulltext/203057/203057.pdf
\end_layout

\end_deeper
\begin_layout Itemize
Display of The Earth Taking into Account Atmospheric Scattering
\end_layout

\begin_deeper
\begin_layout Itemize
http://nishitalab.org/user/nis/cdrom/sig93_nis.pdf
\end_layout

\end_deeper
\begin_layout Itemize
Real-Time Rendering of Planets with Atmospheres
\end_layout

\begin_deeper
\begin_layout Itemize
https://naos-be.zcu.cz/server/api/core/bitstreams/235c2478-5bff-4510-b22f-d5d93001
d574/content
\end_layout

\end_deeper
\begin_layout Itemize
Accurate Atmospheric Scattering
\end_layout

\begin_deeper
\begin_layout Itemize
https://developer.nvidia.com/gpugems/gpugems2/part-ii-shading-lighting-and-shadows
/chapter-16-accurate-atmospheric-scattering
\end_layout

\end_deeper
\begin_layout Itemize
Precomputed Atmospheric Scattering
\end_layout

\begin_deeper
\begin_layout Itemize
http://www.klayge.org/material/4_0/Atmospheric/Precomputed%20Atmospheric%20Scatter
ing.pdf
\end_layout

\begin_layout Itemize
http://evasion.inrialpes.fr/~Eric.Bruneton/
\end_layout

\begin_layout Itemize
https://github.com/ebruneton/precomputed_atmospheric_scattering
\end_layout

\end_deeper
\begin_layout Itemize
Deferred Rendering of Planetary Terrains with Accurate Atmospheres
\end_layout

\begin_deeper
\begin_layout Itemize
https://www.gamedevs.org/uploads/deferred-rendering-of-planetary-terrains-with-acc
urate-atmospheres.pdf
\end_layout

\end_deeper
\begin_layout Itemize
A Scalable and Production Ready Sky and Atmosphere Rendering Technique
\end_layout

\begin_deeper
\begin_layout Itemize
https://sebh.github.io/publications/egsr2020.pdf
\end_layout

\end_deeper
\begin_layout Itemize
Solar System
\end_layout

\begin_deeper
\begin_layout Itemize
https://github.com/SebLague/Solar-System
\end_layout

\begin_layout Itemize
https://www.youtube.com/watch?v=DxfEbulyFcY
\end_layout

\end_deeper
\begin_layout Itemize
Trapezoidal Rule
\end_layout

\begin_deeper
\begin_layout Itemize
https://en.wikipedia.org/wiki/Trapezoidal_rule
\end_layout

\begin_layout Itemize
https://math.stackexchange.com/questions/2891298/derivation-of-2d-trapezoid-rule
\end_layout

\end_deeper
\begin_layout Itemize
Spherical Coordinate System
\end_layout

\begin_deeper
\begin_layout Itemize
https://en.wikipedia.org/wiki/Spherical_coordinate_system
\end_layout

\end_deeper
\end_body
\end_document
